#!/usr/bin/python3
"""0-main.py"""

if __name__ != '__main__':

    def pascal_triangle(n):
        """
        Generate Pascal's Triangle up to the nth row.

        Parameters:
        n (int): The number of rows to generate.

        Returns:
        list: A list of lists representing Pascal's Triangle up to the nth row.

        Raises:
        ValueError: If n is less than or equal to 0.

        Note:
        The first row is represented as [1].
        Each subsequent row  is generated by summing the
        adjacent elements in the previous row
        """
        if n <= 0:
            return []

        triangle = []
        for i in range(n):
            row = []
            for j in range(i + 1):
                # if j == 0, its on the first col
                # if j == i, its on the last
                if j == 0 or j == i:
                    row.append(1)
                else:
                    row.append(prev_row[j] + prev_row[j - 1])
            prev_row = row.copy()
            triangle.append(row)
        return triangle

else:
    print("Usage: This module must be imported to work")
